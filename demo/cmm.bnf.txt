prog : epsilon
prog : EXTERN intern_dcl SEMI prog
prog : type progt
prog : VOID progv

intern_dcl : type func_decl
intern_dcl : VOID func_decl

type : CHAR
type : INT

progt : ID progtid

progv : ID LPAREN parm_types RPAREN progidf

progtid : var_decls SEMI prog
progtid : LBRACKET INTCON RBRACKET var_decls SEMI prog
progtid : LPAREN parm_types RPAREN progidf

var_decls : epsilon
var_decls : COMMA ID var_decls_id

var_decls_id : var_decls
var_decls_id : LBRACKET INTCON RBRACKET var_decls

progidf : func_decls SEMI prog
progidf : LBRACE in_func_decls stmts RBRACE prog

func_decls : epsilon
func_decls : COMMA ID LPAREN parm_types RPAREN func_decls

parm_types : VOID
parm_types : type ID parm_types_t

parm_types_t : more_param_types
parm_types_t : LBRACKET RBRACKET more_param_types

more_param_types : epsilon
more_param_types : COMMA type ID more_param_types_id

more_param_types_id : more_param_types
more_param_types_id : LBRACKET RBRACKET more_param_types

in_func_decls : epsilon
in_func_decls : type ID in_func_decls_id

in_func_decls_id : var_decls SEMI in_func_decls
in_func_decls_id : LBRACKET INTCON RBRACKET var_decls SEMI in_func_decls

stmts : epsilon
stmts : stmt stmts

stmt : IF LPAREN expr RPAREN stmt ELSE stmt
stmt : WHILE LPAREN expr RPAREN stmt
stmt : RETURN return
stmt : LBRACE stmts RBRACE
stmt : SEMI
stmt : stmtid

return : expr SEMI
return : SEMI

stmtid : assgid SEMI
stmtid : LPAREN exprs RPAREN SEMI

assgid : ASSIGN expr
assgid : LBRACKET expr RBRACKET ASSIGN expr

exprs : epsilon
exprs : expr more_exprs

more_exprs : epsilon
more_exprs : COMMA expr more_exprs

expr : MINUS expr expr'
expr : NOT expr expr'
expr : ID exprid
expr : LPAREN expr RPAREN expr'
expr : INTCON expr'
expr : CHARCON expr'
expr : STRINGCON expr'

exprid : expr'
exprid : LPAREN exprs RPAREN expr'
exprid : LBRACKET expr RBRACKET expr'

expr' : epsilon
expr' : binop expr expr'
expr' : relop expr expr'
expr' : logical_op expr expr'

binop : PLUS
binop : MINUS
binop : TIMES
binop : DIVIDE

relop : EQ
relop : NE
relop : LE
relop : LT
relop : GE
relop : GT

logical_op : AND
logical_op : OR
